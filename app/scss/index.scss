@import "variables";
@import "mixins";
body {
  background-image:nth($images,3);
  background-attachment: fixed;
  background-size:cover;
}
.dim { opacity:.3; }
#skills {
  position:relative;
  min-height:100vw;
  $thickness:20;
  margin:$thickness + vw 0;
  padding:$thickness / 2 + vw;
  // This looks really awesome but it's too costly on browsers.
  // span { box-shadow:0 0 $thickness / 4 + vw #000,0 0 $thickness / 4 + vw #000; }
  > span:nth-of-type(1) { @include diamond(100-10 + $thickness * 2, nth($images,2)); }
  > span:nth-of-type(2) { @include diamond(100-10 + $thickness, nth($images,3)); }
  > span:nth-of-type(3) { @include diamond(100-10, nth($images,2)); }
}
#home, #contact {
  position:relative;
  background-color:rgba(0, 0, 0, 0.8);
  &::before {
    top:0;
    content:'';
    left:-25vw;
    z-index: -1;
    height:100%;
    position:absolute;
    width:calc(150vw + 50px);
  }
}
#home::before { box-shadow:0 50px 50px rgba(0, 0, 0, 0.8); }
#contact::before { box-shadow:0 -50px 50px rgba(0, 0, 0, 0.8); }

@media (max-width: 640px), (orientation: portrait) {
  section:not(#skills)::before {
    background-image: nth($images,3);
    background-attachment: fixed;
    background-size:cover;
  }
  #skills {
    z-index:-2;
    min-height:100vh;
    margin:0;
    > span:nth-of-type(1), > span:nth-of-type(2) { display:none; }
    > span, > span::before {
      transform: none!important;
      height:100vh!important;
      width:100vw!important;
      left:0px!important;
      top:0px!important;
    }
  }
}
